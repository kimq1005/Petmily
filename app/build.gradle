plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.llama.petmilly_client'
    compileSdk 34

    defaultConfig {
        applicationId "com.llama.petmilly_client"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // 로컬 프로퍼티 읽기
        def localProperties = new Properties()
        file("${rootDir}/local.properties").withInputStream { stream ->
            localProperties.load(stream)
        }
        def kakaoSdkKey = localProperties.getProperty("KAKAO_V2_KEY_ID", "")

        // manifest 치환
        manifestPlaceholders = [KAKAO_V2_KEY_ID: kakaoSdkKey]

        buildConfigField "String", "KAKAO_V2_KEY_ID", "\"${kakaoSdkKey}\""
    }

    flavorDimensions += "version"

    productFlavors {
        dev {
            buildConfigField "String", "BASE_URL_YEAH", "\"https://www.naver.com\""
        }

        prod {
            buildConfigField "String", "BASE_URL_YEAH", "https://www.test-naver.com"
        }

        yeahman {
            buildConfigField "String", "BASE_URL_YEAH", "https://www.test-naver.com"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        buildConfig = true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.3"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    // Core & Compose
    implementation(libs.core.ktx)
    implementation(libs.compose.ui)
    implementation(platform(libs.compose.bom))
    implementation(libs.compose.material)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.activity.compose)
    implementation(libs.lifecycle.runtime.ktx)
    implementation(libs.lifecycle.viewmodel.ktx)
    implementation(libs.compose.runtime.livedata)
    implementation(libs.appcompat)
//    implementation libs.androidx.media3.common.ktx

    // Tests
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.espresso)
    androidTestImplementation(libs.compose.ui.test)
    debugImplementation(libs.compose.ui.tooling)
    debugImplementation(libs.compose.ui.test.manifest)

    // Paging
    implementation(libs.paging.runtime)
    implementation(libs.paging.compose)

    // Navigation
    implementation(libs.navigation.compose)

    // Coroutines
    implementation(libs.coroutines.core)
    implementation(libs.coroutines.android)
    implementation(libs.coroutines.play.services)

    // Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.android.compiler)
    kapt(libs.hilt.compiler)
    implementation(libs.hilt.navigation.compose)

    // Retrofit & OkHttp
    implementation(libs.retrofit)
    implementation(libs.converter.gson)
    implementation(libs.okhttp)

    // Coil
    implementation(libs.coil.compose)

    // Accompanist
    implementation(libs.accompanist.systemuicontroller)
    implementation(libs.accompanist.flowlayout)
    implementation(libs.accompanist.pager)
    implementation(libs.accompanist.pager.indicators)

//    implementation(libs.naver.map.compose)
//    implementation(libs.naver.map.sdk)
//    implementation(libs.tedclustering.naver)
//    implementation(libs.lottie.compose)

    // Play Services
    implementation(libs.play.services.maps)
    implementation(libs.play.services.location)

    // Flexbox
    implementation(libs.flexbox)

//    // kakao
    implementation(libs.kakao.v2)

    // ConstraintLayout
    implementation(libs.constraintlayout.compose)

    // MQTT
    implementation(libs.paho)

    // Firebase
    implementation(libs.firebase.analytics)
    implementation(libs.firebase.messaging)

    //orbit
    implementation(libs.orbit.compose)
    implementation(libs.orbit.core)
    implementation(libs.orbit.viewmodel)

    //DataStore
//    implementation(libs.datastore)
}